(function () {
    function getCountryFlag(code) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "US") –≤ üá∫üá∏
        return code.toUpperCase().replace(/./g, char => 
            String.fromCodePoint(127397 + char.charCodeAt())
        );
    }

    function checkVPN() {
        fetch('https://ipwhois.app/json/')
            .then(response => {
                if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
                return response.json();
            })
            .then(data => {
                const countryCode = data.country_code || '';
                const countryName = data.country || '';
                const flag = getCountryFlag(countryCode);

                console.log(`[VPN Plugin] –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∞: ${countryName} (${countryCode})`);

                if (countryCode !== 'RU') {
                    const message = `${flag} –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å—Ç—Ä–∞–Ω–µ: ${countryName}. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∫–ª—é—á—ë–Ω VPN. –û—Ç–∫–ª—é—á–∏—Ç–µ –µ–≥–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã.`;

                    if (window.Lampa && Lampa.Noty && typeof Lampa.Noty.show === 'function') {
                        // –£–≤–µ–ª–∏—á–∏–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –¥–æ 10 —Å–µ–∫—É–Ω–¥
                        Lampa.Noty.time = 10000;
                        Lampa.Noty.show(message);
                    }
                } else {
                    console.log('[VPN Plugin] IP –∏–∑ –†–§, –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ.');
                }
            })
            .catch(error => {
                console.log('[VPN Plugin] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è IP:', error);
            });
    }

    if (window.Lampa) {
        checkVPN();
    } else {
        console.log('[VPN Plugin] Lampa –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    }
})();
